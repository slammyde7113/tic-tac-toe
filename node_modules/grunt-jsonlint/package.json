{
  "_args": [
    [
      {
        "raw": "grunt-jsonlint@^1.1.0",
        "scope": null,
        "escapedName": "grunt-jsonlint",
        "name": "grunt-jsonlint",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/home/sdyer/wdi/practices/tic-tac-toe"
    ]
  ],
  "_from": "grunt-jsonlint@>=1.1.0 <2.0.0",
  "_id": "grunt-jsonlint@1.1.0",
  "_inCache": true,
  "_location": "/grunt-jsonlint",
  "_nodeVersion": "4.4.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/grunt-jsonlint-1.1.0.tgz_1465680209901_0.33655962836928666"
  },
  "_npmUser": {
    "name": "brandonramirez",
    "email": "brandon.s.ramirez@gmail.com"
  },
  "_npmVersion": "2.14.20",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-jsonlint@^1.1.0",
    "scope": null,
    "escapedName": "grunt-jsonlint",
    "name": "grunt-jsonlint",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-jsonlint/-/grunt-jsonlint-1.1.0.tgz",
  "_shasum": "a31ee97240aee3f343ca263c45bd532063127db2",
  "_shrinkwrap": null,
  "_spec": "grunt-jsonlint@^1.1.0",
  "_where": "/home/sdyer/wdi/practices/tic-tac-toe",
  "author": {
    "name": "Brandon Ramirez",
    "email": "brandon.s.ramirez@gmail.com",
    "url": "http://www.brandonsramirez.com/"
  },
  "bugs": {
    "url": "https://github.com/brandonramirez/grunt-jsonlint/issues"
  },
  "contributors": [
    {
      "name": "Fred Ghosn",
      "url": "https://github.com/fredghosn"
    }
  ],
  "dependencies": {
    "jsonlint": "1.6.2",
    "strip-json-comments": "^2.0.0"
  },
  "description": "Validate JSON files from grunt.",
  "devDependencies": {
    "async": "^1.5.0",
    "expect.js": "^0.3.1",
    "fs-writefile-promise": "^1.0.3",
    "grunt": "~1.0.0",
    "grunt-contrib-jshint": "~1.0.0",
    "grunt-mocha-test": "^0.12.7",
    "lodash": "^4.0.0",
    "mkdirp-promise": "^2.0.0",
    "mocha": "^2.3.4",
    "promise": "^7.1.1",
    "sinon": "^1.17.2",
    "sinon-expect": "^0.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a31ee97240aee3f343ca263c45bd532063127db2",
    "tarball": "https://registry.npmjs.org/grunt-jsonlint/-/grunt-jsonlint-1.1.0.tgz"
  },
  "engines": {
    "node": ">=4.0"
  },
  "gitHead": "9ba23c878c6a5e00f3d2199dfb8917a582734b08",
  "homepage": "https://github.com/brandonramirez/grunt-jsonlint#readme",
  "keywords": [
    "gruntplugin",
    "build",
    "validate"
  ],
  "license": "MIT",
  "main": "tasks/jsonlint.js",
  "maintainers": [
    {
      "name": "brandonramirez",
      "email": "brandon.s.ramirez@gmail.com"
    }
  ],
  "name": "grunt-jsonlint",
  "optionalDependencies": {},
  "readme": "grunt-jsonlint [![Build Status](https://travis-ci.org/brandonramirez/grunt-jsonlint.svg)](https://travis-ci.org/brandonramirez/grunt-jsonlint)\n==============\n\nValidate JSON files from grunt.\n\nRequires grunt 1.0+ and node 4.0+.\n\n# Install\n\n    npm install grunt-jsonlint --save-dev\n\n# Configure\n\nAdd the following (multi-)task to your Gruntfile:\n\n    jsonlint: {\n      sample: {\n        src: [ 'some/valid.json' ],\n        options: {\n          formatter: 'prose'\n        }\n      }\n    }\n\nAdd the following to load the task into your Gruntfile:\n\n    grunt.loadNpmTasks('grunt-jsonlint');\n\nAn error will be thrown if the JSON file contains syntax errors.  To prefer an error format compatible with Visual Studio, change the formatter to 'msbuild'.\n\nHere's a simple [tutorial](http://grunt-tasks.com/grunt-jsonlint/ \"grunt\") on how to use grunt-jsonlint\n\n# Formatting\n\nAdd the following (multi-)task to your Gruntfile:\n\n    jsonlint: {\n      all: {\n        src: [ 'some/valid.json' ],\n        options: {\n          format: true,\n          indent: 2,\n        }\n      }\n    }\n\n* format, when true JSON.stringify will be used to format the JavaScript (if it is valid)\n* indent, the value passed to JSON.stringify, it can be the number of spaces, or string like \"\\t\"\n\n# Reporting\n\nThere are a few options available for reporting errors:\n\n## Error message format\n\nThe standard error message format (`prose`) is optimized for human reading and looks like:\n\n    >> File \"test/invalid.json\" failed JSON validation at line 9.\n\nThis is customizable to conform to the Visual Studio style by specifying the `formatter` option as `msbuild`, like:\n\n    jsonlint: {\n\n      visualStudioExample: {\n        src: [ 'test/invalid.json' ],\n        options: {\n          formatter: 'msbuild'\n        }\n      }\n\n    }\n\nThe output will look like:\n\n    >> test/invalid.json(9): error: failed JSON validation\n\n## Error reporting\n\nBy default, the raw error from the underlying `jsonlint` library comes through to the grunt output.  It looks like:\n\n    Error: Parse error on line 9:\n    ...        \"2\"        \"3\",      ],      \n    ----------------------^\n    Expecting 'EOF', '}', ':', ',', ']', got 'STRING'\n\nTo customize this, change the `reporter` option to `jshint` (the format is inspired by how `jshint` formats their output, hence the name):\n\n    jsonlint: {\n\n      jshintStyle: {\n        src: [ 'test/invalid.json' ],\n        options: {\n          reporter: 'jshint'\n        }\n      }\n\n    }\n\nThe output will look like:\n\n     9 |     \"3\"\n             ^ Expected 'EOF', '}', ':', ',', ']' and instead saw '3'\n\nThe default reporter is called `exception` since it simply relays the raw exception.\n\n# Roadmap\n\nThe underlying jsonlint library has many features not yet exposed.\nEach of these would be valuable in grunt.\n\n* Schema validation\n* Sort file by key\n\n# Running tests\n\nUnit tests are provided for automated regression testing.  The easiest way\nto run them is with\n\n    $ npm install\n    $ npm test\n\nAlternatively, if you have `grunt-cli` installed, you could use grunt directly with\n\n    $ npm install\n    $ grunt test\n\nWhich does the same thing.\n\n# Release History\n\n* 2013-02-20   v1.0.0\tFirst official release\n* 2013-09-19   v1.0.1\tDo not log every validated file\n* 2013-10-31   v1.0.2\tAdd output of count of successfully linted JSON file for issue\n* 2013-11-16   v1.0.3\tFix output of count of successfully linted JSON files.\n* 2013-11-18   v1.0.4\tUpdated for latest dependencies.\n* 2015-10-11   v1.0.5\tUpdated for latest dependencies.\n* 2015-10-29   v1.0.6\tCJSON support thanks to @fredghosn, unit tests\n* 2015-12-23   v1.0.7\tInclude file name and JSON source line number in error messages\n* 2016-05-27   v1.0.8\tOption to format JSON file thanks to @robblue2x\n* 2016-06-11   v1.1.0\tEnhanced error reporting for better human reading and Visual Studio integration.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/brandonramirez/grunt-jsonlint.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.1.0"
}
